{"ast":null,"code":"const API_BASE = \"http://localhost:8080\";\nconst encodePath = path => path.split('/').map(encodeURIComponent).join('/');\nexport const registerUser = async (username, email, password) => {\n  const res = await fetch(`${API_BASE}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  return res.json();\n};\nexport const loginUser = async (username, password) => {\n  const res = await fetch(`${API_BASE}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  return res.json();\n};\nexport const createFolder = async (folderName, token) => {\n  const url = `${API_BASE}/files/mkdir/${encodePath(folderName)}/`;\n  const res = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    let msg = \"Unknown error\";\n    try {\n      msg = (await res.json()).message || msg;\n    } catch {}\n    return {\n      error: true,\n      status: res.status,\n      message: msg\n    };\n  }\n  try {\n    return await res.json();\n  } catch {\n    return {\n      error: false,\n      status: res.status,\n      message: await res.text()\n    };\n  }\n};\nexport const listFiles = async (token, path = \"\") => {\n  const url = path ? `${API_BASE}/files/list/${encodePath(path)}` : `${API_BASE}/files/list`;\n  const res = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.json();\n};\nexport const uploadFile = async (path, file, token) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const url = path ? `${API_BASE}/files/upload/${encodePath(path)}` : `${API_BASE}/files/upload`;\n  const res = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    body: formData\n  });\n  if (!res.ok) {\n    let msg = \"Unknown error\";\n    try {\n      msg = (await res.json()).message || msg;\n    } catch {}\n    return {\n      error: true,\n      status: res.status,\n      message: msg\n    };\n  }\n  try {\n    return await res.json();\n  } catch {\n    return {\n      error: false,\n      status: res.status,\n      message: await res.text()\n    };\n  }\n};\nexport const downloadFile = async (filePath, token) => {\n  const url = filePath ? `${API_BASE}/files/download/${encodePath(filePath)}` : `${API_BASE}/files/download`;\n  const res = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    let msg = \"Unknown error\";\n    try {\n      msg = (await res.json()).message || msg;\n    } catch {}\n    throw new Error(msg);\n  }\n  const blob = await res.blob();\n  const downloadName = filePath.split(\"/\").pop();\n  const blobUrl = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = blobUrl;\n  a.download = downloadName;\n  document.body.appendChild(a);\n  a.click();\n  a.remove();\n  setTimeout(() => window.URL.revokeObjectURL(blobUrl), 60000);\n};\nexport const deleteFile = async (filePath, token) => {\n  const url = filePath ? `${API_BASE}/files/delete/${encodePath(filePath)}` : `${API_BASE}/files/delete`;\n  const res = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.text();\n};","map":{"version":3,"names":["API_BASE","encodePath","path","split","map","encodeURIComponent","join","registerUser","username","email","password","res","fetch","method","headers","body","JSON","stringify","json","loginUser","createFolder","folderName","token","url","Authorization","ok","msg","message","error","status","text","listFiles","uploadFile","file","formData","FormData","append","downloadFile","filePath","Error","blob","downloadName","pop","blobUrl","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","setTimeout","revokeObjectURL","deleteFile"],"sources":["C:/Users/yuvi2/Downloads/javaProject/src/api/index.js"],"sourcesContent":["const API_BASE = \"http://localhost:8080\";\r\nconst encodePath = (path) => path.split('/').map(encodeURIComponent).join('/');\r\n\r\nexport const registerUser = async (username, email, password) => {\r\n  const res = await fetch(`${API_BASE}/auth/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ username, email, password }),\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const loginUser = async (username, password) => {\r\n  const res = await fetch(`${API_BASE}/auth/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const createFolder = async (folderName, token) => {\r\n  const url = `${API_BASE}/files/mkdir/${encodePath(folderName)}/`;\r\n  const res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n  if (!res.ok) {\r\n    let msg = \"Unknown error\";\r\n    try { msg = (await res.json()).message || msg; } catch {}\r\n    return { error: true, status: res.status, message: msg };\r\n  }\r\n  try {\r\n    return await res.json();\r\n  } catch {\r\n    return { error: false, status: res.status, message: await res.text() };\r\n  }\r\n};\r\n\r\nexport const listFiles = async (token, path = \"\") => {\r\n  const url = path ? `${API_BASE}/files/list/${encodePath(path)}` : `${API_BASE}/files/list`;\r\n  const res = await fetch(url, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const uploadFile = async (path, file, token) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  const url = path ? `${API_BASE}/files/upload/${encodePath(path)}` : `${API_BASE}/files/upload`;\r\n  const res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: { Authorization: `Bearer ${token}` },\r\n    body: formData\r\n  });\r\n  if (!res.ok) {\r\n    let msg = \"Unknown error\";\r\n    try { msg = (await res.json()).message || msg; } catch {}\r\n    return { error: true, status: res.status, message: msg };\r\n  }\r\n  try {\r\n    return await res.json();\r\n  } catch {\r\n    return { error: false, status: res.status, message: await res.text() };\r\n  }\r\n};\r\n\r\nexport const downloadFile = async (filePath, token) => {\r\n  const url = filePath ? `${API_BASE}/files/download/${encodePath(filePath)}` : `${API_BASE}/files/download`;\r\n  const res = await fetch(url, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n  if (!res.ok) {\r\n    let msg = \"Unknown error\";\r\n    try { msg = (await res.json()).message || msg; } catch {}\r\n    throw new Error(msg);\r\n  }\r\n  const blob = await res.blob();\r\n  const downloadName = filePath.split(\"/\").pop();\r\n  const blobUrl = window.URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.href = blobUrl;\r\n  a.download = downloadName;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  a.remove();\r\n  setTimeout(() => window.URL.revokeObjectURL(blobUrl), 60000);\r\n};\r\n\r\nexport const deleteFile = async (filePath, token) => {\r\n  const url = filePath ? `${API_BASE}/files/delete/${encodePath(filePath)}` : `${API_BASE}/files/delete`;\r\n  const res = await fetch(url, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n  return res.text();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}