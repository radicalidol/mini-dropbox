{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvi2\\\\Downloads\\\\javaProject\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport Dashboard from \"./pages/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getToken() {\n  return sessionStorage.getItem(\"token\");\n}\nfunction ProtectedRoute({\n  children\n}) {\n  return getToken() ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 34\n  }, this);\n}\n_c = ProtectedRoute;\nexport default function App() {\n  _s();\n  const [token, setToken] = useState(getToken());\n  const handleLogin = () => {\n    setToken(getToken());\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            token: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","LoginPage","Dashboard","jsxDEV","_jsxDEV","getToken","sessionStorage","getItem","ProtectedRoute","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","token","setToken","handleLogin","path","element","onLogin","_c2","$RefreshReg$"],"sources":["C:/Users/yuvi2/Downloads/javaProject/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\n\r\nfunction getToken() {\r\n  return sessionStorage.getItem(\"token\");\r\n}\r\n\r\nfunction ProtectedRoute({ children }) {\r\n  return getToken() ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default function App() {\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const handleLogin = () => {\r\n    setToken(getToken());\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Dashboard token={token} />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChG,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,QAAQA,CAAA,EAAG;EAClB,OAAOC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC;AAEA,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACpC,OAAOJ,QAAQ,CAAC,CAAC,GAAGI,QAAQ,gBAAGL,OAAA,CAACL,QAAQ;IAACW,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD;AAACC,EAAA,GAFQP,cAAc;AAIvB,eAAe,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAACW,QAAQ,CAAC,CAAC,CAAC;EAE9C,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACd,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACED,OAAA,CAACR,MAAM;IAAAa,QAAA,eACLL,OAAA,CAACP,MAAM;MAAAY,QAAA,gBACLL,OAAA,CAACN,KAAK;QAACuB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAElB,OAAA,CAACH,SAAS;UAACsB,OAAO,EAAEH;QAAY;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrEV,OAAA,CAACN,KAAK;QACJuB,IAAI,EAAC,GAAG;QACRC,OAAO,eACLlB,OAAA,CAACI,cAAc;UAAAC,QAAA,eACbL,OAAA,CAACF,SAAS;YAACgB,KAAK,EAAEA;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFV,OAAA,CAACN,KAAK;QAACuB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAElB,OAAA,CAACL,QAAQ;UAACW,EAAE,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACG,EAAA,CAvBuBD,GAAG;AAAAQ,GAAA,GAAHR,GAAG;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}